!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACL	acl/acl.ts	/^export class ACL<A extends AtomName> implements AccessLayer<A>{$/;"	c
AccessLayer	typ/layer.ts	/^export interface AccessLayer<A extends AtomName> {$/;"	i
ApiInstance	nst/index.ts	/^type ApiInstance<T> = T | undefined;$/;"	t
Atom	typ/atom.ts	/^export type Atom<A extends AtomName> =$/;"	t
Atom	typ/book_cln.ts	/^				export interface Atom {$/;"	i
Atom	typ/book_cln.ts	/^			export interface Atom extends SharedFields {$/;"	i
AtomArray	typ/book_cln.ts	/^			export interface AtomArray extends SharedFields {$/;"	i
AtomHardProperties	typ/atom.ts	/^type AtomHardProperties = {$/;"	t
AtomMoleculeBondPropertyType	typ/atom.ts	/^export type AtomMoleculeBondPropertyType<$/;"	t
AtomName	typ/atom.ts	/^export type AtomName = keyof typeof atom_book;$/;"	t
AtomOrMolecule	typ/atom.ts	/^type AtomOrMolecule = 'atom' | 'molecule';$/;"	t
AtomPrimitiveShape	typ/atom.ts	/^type AtomPrimitiveShape<A extends AtomName> =$/;"	t
AtomShape	typ/atom.ts	/^export type AtomShape<A extends AtomName> =$/;"	t
AuthAction	typ/auth.ts	/^export enum AuthAction {$/;"	e
AuthAtom	typ/atom.ts	/^export type AuthAtom<A extends AuthName> =$/;"	t
AuthAtomShape	typ/atom.ts	/^export type AuthAtomShape<A extends AuthName> =$/;"	t
AuthBLL	bll/auth.ts	/^export class AuthBLL<A extends AtomName> extends SecurityBLL<A>{$/;"	c
AuthName	typ/atom.ts	/^export type AuthName = keyof ExtractAuthName<typeof atom_book>;$/;"	t
AuthenticationBLL	bll/authenticate.ts	/^class AuthenticationBLL<A extends AuthName> {$/;"	c
AuthenticationBLLInstance	bll/authenticate.ts	/^export type AuthenticationBLLInstance = InstanceType<typeof AuthenticationBLL>;$/;"	t
BLL	bll/bll.ts	/^export class BLL<A extends AtomName> extends AuthBLL<A>{}$/;"	c
BLLInstance	bll/create.ts	/^export type BLLInstance = InstanceType<typeof BLL>;$/;"	t
BasicBLL	bll/basic.ts	/^export class BasicBLL<A extends AtomName> {$/;"	c
BasicDAL	dal/basic.ts	/^export class BasicDAL<A extends AtomName> implements AccessLayer<A>{$/;"	c
BasicDefinition	typ/book_cln.ts	/^	export type BasicDefinition = {$/;"	t
BasicDefinition	typ/book_srv.ts	/^	export type BasicDefinition =$/;"	t
Binary	typ/book_cln.ts	/^			export interface Binary extends SharedFields {$/;"	i
Bll	typ/book_srv.ts	/^		export type Bll<A extends AtomName> = {$/;"	t
BllReturnType	bll/create.ts	/^type BllReturnType<T, A extends AtomName> = T extends (...args:any) => BLL<A> ?$/;"	t
BondPropertyDefinition	typ/atom.ts	/^type BondPropertyDefinition = {type: BookPropertyType.ATOM} | {type: BookPropertyType.ATOM_ARRAY};$/;"	t
BondShape	typ/atom.ts	/^type BondShape<A extends AtomName, AoM extends AtomOrMolecule, D extends Depth> =$/;"	t
Book	typ/book_cln.ts	/^export type Book = {$/;"	t
Book	typ/book_srv.ts	/^export type Book = {$/;"	t
BookPropertyStringType	typ/common.ts	/^export const BookPropertyStringType = {$/;"	v
Comparsion	typ/query.ts	/^	type Comparsion<T> =$/;"	t
Configuration	typ/conf.ts	/^export type Configuration = RequiredConfigParams & Partial<OptionalConfigParam>;$/;"	t
ConnectionInstance	rel/mongo/connection.ts	/^export type ConnectionInstance = InstanceType<typeof MongooseDBConnection>;$/;"	t
ConnectionName	typ/book_cln.ts	/^export type ConnectionName = 'main' | 'trash' | 'log';$/;"	t
CustomBLL	bll/create.ts	/^type CustomBLL<A extends AtomName> =$/;"	t
DAL	dal/dal.ts	/^export class DAL<A extends AtomName> extends SelfishDAL<A>{}$/;"	c
DatabaseType	typ/conf.ts	/^export type DatabaseType = 'mongo'; \/\/ | 'mysql'$/;"	t
Day	typ/book_cln.ts	/^			export interface Day extends SharedFields {$/;"	i
DayTime	typ/book_cln.ts	/^				export interface DayTime {$/;"	i
DayTime	typ/book_cln.ts	/^			export type DayTime =$/;"	t
Definition	typ/book_cln.ts	/^	export type Definition =$/;"	t
Definition	typ/book_srv.ts	/^	export type Definition<A extends AtomName> =$/;"	t
DefinitionPropertyInferBondAtomName	typ/atom.ts	/^type DefinitionPropertyInferBondAtomName<P> =$/;"	t
DefinitionPropertyInferType	typ/atom.ts	/^type DefinitionPropertyInferType<P> = P extends {type: infer I} ? I : never;$/;"	t
DefinitionPropertyIsBondArray	typ/atom.ts	/^type DefinitionPropertyIsBondArray<P> =$/;"	t
DefinitionTypeOfCommonProperty	typ/atom.ts	/^type DefinitionTypeOfCommonProperty<k extends KeyOfCommonProperties> =$/;"	t
DefinitionTypeOfDefintionProperty	typ/atom.ts	/^type DefinitionTypeOfDefintionProperty<A extends AtomName, k extends KeyOfPropertyOfAtomDefinition<A>> =$/;"	t
DefinitionTypeOfHardProperty	typ/atom.ts	/^type DefinitionTypeOfHardProperty<k extends KeyOfHardProperties> =$/;"	t
Depth	typ/atom.ts	/^export type Depth = undefined | 0 | 1 | 2 | 3;$/;"	t
Email	typ/book_cln.ts	/^			export interface Email extends SharedFields {$/;"	i
EncryptDAL	dal/encrypt.ts	/^export class EncryptDAL<A extends AtomName> extends ValidateDAL<A>{$/;"	c
Encrypted	typ/book_cln.ts	/^			export interface Encrypted extends SharedFields {$/;"	i
Enum	typ/book_cln.ts	/^			export type Enum =$/;"	t
EnumNumber	typ/book_cln.ts	/^			export interface EnumNumber extends SharedFields {$/;"	i
EnumString	typ/book_cln.ts	/^			export interface EnumString extends SharedFields {$/;"	i
Equal	typ/query.ts	/^	export type Equal<A extends AtomName> =$/;"	t
ExcludeBondAndBondArray	typ/atom.ts	/^type ExcludeBondAndBondArray<P> = OmitSubType<P, BondPropertyDefinition>;$/;"	t
ExcludeOptional	typ/atom.ts	/^type ExcludeOptional<P> = OmitSubType<P, {optional: true}>;$/;"	t
Expression	typ/query.ts	/^	export type Expression<A extends AtomName> = Equal<A> | WithComparsion<A>;$/;"	t
ExtractAuthName	typ/atom.ts	/^type ExtractAuthName<P> = PickSubType<P, {authenticate: true}>;$/;"	t
ExtractBond	typ/atom.ts	/^type ExtractBond<P> = PickSubType<P, BondPropertyDefinition>;$/;"	t
ExtractLogAtom	typ/atom.ts	/^type ExtractLogAtom<P> = PickSubType<P, {connection: 'log'}>;$/;"	t
ExtractOptional	typ/atom.ts	/^type ExtractOptional<P> = PickSubType<P, {optional: true}>;$/;"	t
Float	typ/book_cln.ts	/^				export interface Float {$/;"	i
Float	typ/book_cln.ts	/^			export interface Float extends SharedFields {$/;"	i
FullConfiguration	typ/conf.ts	/^export type FullConfiguration = RequiredConfigParams & OptionalConfigParam;$/;"	t
ID	typ/book_cln.ts	/^			export interface ID extends SharedFields {$/;"	i
Integer	typ/book_cln.ts	/^			export interface Integer extends SharedFields {$/;"	i
KeyOfCommonProperties	typ/atom.ts	/^export type KeyOfCommonProperties = keyof typeof atom_common_properties;$/;"	t
KeyOfHardProperties	typ/atom.ts	/^export type KeyOfHardProperties = keyof typeof atom_hard_properties;$/;"	t
KeyOfPropertyOfAtomDefinition	typ/atom.ts	/^export type KeyOfPropertyOfAtomDefinition<A extends AtomName> = keyof PropertiesOfAtomDefinition<A>;$/;"	t
LogBLL	bll/log.ts	/^class LogBLL<A extends LogName> extends BasicBLL<A>{$/;"	c
LogDAL	dal/log.ts	/^export class LogDAL<A extends LogName> extends DAL<A>{$/;"	c
LogName	typ/atom.ts	/^export type LogName = keyof ExtractLogAtom<typeof atom_book>;$/;"	t
Logical	typ/query.ts	/^	export type Logical<A extends AtomName> =$/;"	t
LongText	typ/book_cln.ts	/^			export interface LongText extends SharedFields {$/;"	i
MapType	typ/auth.ts	/^export type MapType<T> =$/;"	t
Molecule	typ/atom.ts	/^export type Molecule<A extends AtomName, D extends Depth = 0> =$/;"	t
MongoApp	rel/mongo/models.ts	/^type MongoApp = {$/;"	t
MongoConnections	rel/mongo/models.ts	/^type MongoConnections = {$/;"	t
MongoModels	rel/mongo/models.ts	/^type MongoModels = {$/;"	t
MongooseDBConnection	rel/mongo/connection.ts	/^class MongooseDBConnection {$/;"	c
MongooseLogRelation	rel/mongo/log.ts	/^export class MongooseLogRelation<A extends AtomName> extends MongooseRelation<A>$/;"	c
MongooseRelation	rel/mongo/relation.ts	/^export class MongooseRelation<A extends AtomName> implements Relation<A> {$/;"	c
MongooseTrashRelation	rel/mongo/trash.ts	/^export class MongooseTrashRelation<A extends AtomName> extends MongooseRelation<A>$/;"	c
Number	typ/book_cln.ts	/^				export interface Number {$/;"	i
Number	typ/book_cln.ts	/^			export type Number =$/;"	t
OmitSubType	typ/atom.ts	/^type OmitSubType<Base, Condition> = Omit<Base, {$/;"	t
OptionalBond	typ/atom.ts	/^type OptionalBond<P> = PickSubType<ExtractBond<P>, {optional: true}>;$/;"	t
OptionalConfigParam	typ/conf.ts	/^type OptionalConfigParam = {$/;"	t
OptionalKeyOfAtomCommonProperties	typ/atom.ts	/^type OptionalKeyOfAtomCommonProperties =$/;"	t
OptionalKeyOfAtomPrimitiveProperties	typ/atom.ts	/^type OptionalKeyOfAtomPrimitiveProperties<A extends AtomName> =$/;"	t
OptionalKeyOfBondProperties	typ/atom.ts	/^type OptionalKeyOfBondProperties<A extends AtomName> =$/;"	t
OptionalPrimitive	typ/atom.ts	/^type OptionalPrimitive<P> = PickSubType<ExcludeBondAndBondArray<P>, {optional: true}>;$/;"	t
Options	typ/query.ts	/^	export type Options<A extends AtomName, D extends Depth = 0> = {$/;"	t
Passport	typ/auth.ts	/^export type Passport = {$/;"	t
PassportKey	typ/auth.ts	/^export type PassportKey = keyof typeof abstract_passport;$/;"	t
PickSubType	typ/atom.ts	/^type PickSubType<Base, Condition> = Pick<Base, {$/;"	t
PopulateObject	rel/mongo/types.ts	/^export type PopulateObject = {$/;"	t
Properties	typ/book_cln.ts	/^		export type Properties = {$/;"	t
PropertiesOfAtomDefinition	typ/atom.ts	/^type PropertiesOfAtomDefinition<A extends AtomName> = typeof atom_book[A]['properties'];$/;"	t
Property	typ/book_cln.ts	/^		export type Property =$/;"	t
Query	typ/query.ts	/^export type Query<A extends AtomName> = Query.Expression<A> | Query.Logical<A>;$/;"	t
QueryAtomKey	typ/query.ts	/^	type QueryAtomKey<A extends AtomName> =$/;"	t
QueryAtomRealType	typ/query.ts	/^	type QueryAtomRealType<A extends AtomName, P extends QueryAtomKey<A>> =$/;"	t
RealType	typ/common.ts	/^export type RealType<AT extends BookPropertyType> =$/;"	t
RealTypeOfAtomCommonProperty	typ/atom.ts	/^export type RealTypeOfAtomCommonProperty<k extends KeyOfCommonProperties> =$/;"	t
RealTypeOfAtomHardProperty	typ/atom.ts	/^export type RealTypeOfAtomHardProperty<k extends KeyOfHardProperties> =$/;"	t
RealTypeOfAtomProperty	typ/atom.ts	/^export type RealTypeOfAtomProperty<A extends AtomName, k extends KeyOfPropertyOfAtomDefinition<A>> =$/;"	t
RealTypeOfMoleculeBondProperty	typ/atom.ts	/^type RealTypeOfMoleculeBondProperty<A extends AtomName, k extends KeyOfPropertyOfAtomDefinition<A>, D extends Depth> =$/;"	t
RecycleDAL	dal/recycle.ts	/^export class RecycleDAL<A extends AtomName> extends EncryptDAL<A>{$/;"	c
Relation	rel/types.ts	/^export interface Relation<A extends AtomName> {$/;"	i
RelationDAL	dal/rel.ts	/^export class RelationDAL<A extends AtomName> extends BasicDAL<A>{$/;"	c
RequiredBond	typ/atom.ts	/^type RequiredBond<P> = OmitSubType<ExtractBond<P>, {optional: true}>;$/;"	t
RequiredConfigParams	typ/conf.ts	/^type RequiredConfigParams = {$/;"	t
RequiredKeyOfAtomCommonProperties	typ/atom.ts	/^type RequiredKeyOfAtomCommonProperties =$/;"	t
RequiredKeyOfAtomPrimitiveProperties	typ/atom.ts	/^type RequiredKeyOfAtomPrimitiveProperties<A extends AtomName> =$/;"	t
RequiredKeyOfBondProperties	typ/atom.ts	/^type RequiredKeyOfBondProperties<A extends AtomName> =$/;"	t
RequiredPrimitive	typ/atom.ts	/^type RequiredPrimitive<P> = OmitSubType<ExcludeBondAndBondArray<P>, {optional: true}>;$/;"	t
Security	typ/book_srv.ts	/^		export type Security = {$/;"	t
SecurityBLL	bll/security.ts	/^export class SecurityBLL<A extends AtomName> extends BasicBLL<A> {$/;"	c
SelfishDAL	dal/selfish.ts	/^export class SelfishDAL<A extends AtomName> extends RecycleDAL<A>{$/;"	c
Set	typ/book_cln.ts	/^			export type Set =$/;"	t
SetNumber	typ/book_cln.ts	/^				export interface SetNumber {$/;"	i
SetNumber	typ/book_cln.ts	/^			export interface SetNumber extends SharedFields {$/;"	i
SetString	typ/book_cln.ts	/^				export interface SetString {$/;"	i
SetString	typ/book_cln.ts	/^			export interface SetString extends SharedFields {$/;"	i
SharedFields	typ/book_cln.ts	/^			export interface SharedFields {$/;"	i
String	typ/book_cln.ts	/^				export interface String {$/;"	i
String	typ/book_cln.ts	/^			export type String =$/;"	t
Text	typ/book_cln.ts	/^			export interface Text extends SharedFields {$/;"	i
Time	typ/book_cln.ts	/^			export interface Time extends SharedFields {$/;"	i
Unset	rel/mongo/relation.ts	/^type Unset = {$/;"	t
ValidateDAL	dal/validate.ts	/^export class ValidateDAL<A extends AtomName> extends RelationDAL<A>{$/;"	c
WithComparsion	typ/query.ts	/^	type WithComparsion<A extends AtomName> =$/;"	t
_add_schema_middleware	rel/mongo/models.ts	/^function _add_schema_middleware<A extends AtomName>($/;"	f
_al	bll/basic.ts	/^	protected _al:AccessLayer<A>;$/;"	m
_basic_bll	bll/authenticate.ts	/^	private _basic_bll:BasicBLL<A>;$/;"	m
_can_atom_write	acl/acl.ts	/^	protected async _can_atom_write(id:string)$/;"	m
_can_uniform_read	acl/acl.ts	/^	protected _can_uniform_read()$/;"	m
_can_uniform_write	acl/acl.ts	/^	protected _can_uniform_write()$/;"	m
_check_ids	dal/validate.ts	/^function _check_ids<A extends AtomName>($/;"	f
_check_passport_key_type	bll/authenticate.ts	/^function _check_passport_key_type(passport:Passport, key:PassportKey)$/;"	f
_check_unique	dal/validate.ts	/^	protected async _check_unique(partial_atom:Partial<AtomShape<A>>, id?:string)$/;"	m
_clean_atom	rel/mongo/relation.ts	/^function _clean_atom<A extends AtomName>(atom_name:A, atom:Atom<A>)$/;"	f
_clean_molecule	rel/mongo/relation.ts	/^function _clean_molecule<A extends AtomName, D extends Depth>(atom_name:A, molecule:Molecule<A,D>)$/;"	f
_clean_unset	rel/mongo/relation.ts	/^function _clean_unset<A extends AtomName>(atom_name:A, partial_atom:Partial<AtomShape<A>>){$/;"	f
_conn_name	rel/mongo/relation.ts	/^	protected _conn_name:ConnectionName;$/;"	m
_connection	rel/mongo/connection.ts	/^	private _connection:mongoose.Connection;$/;"	m
_convert_for_trash	rel/mongo/models.ts	/^function _convert_for_trash(schema_definition:mongoose.SchemaDefinition)$/;"	f
_create_connection	rel/mongo/models.ts	/^function _create_connection(conn_name:ConnectionName){$/;"	f
_create_models	rel/mongo/models.ts	/^function _create_models(mongoose_db_connection:mongo_connection.ConnectionInstance, connection?:ConnectionName){$/;"	f
_custom_validate_bond_atom	atm/validate.ts	/^function _custom_validate_bond_atom<A extends AtomName, D extends Depth>($/;"	f
_custom_validate_number	atm/validate.ts	/^function _custom_validate_number<A extends AtomName>($/;"	f
_custom_validate_set_number	atm/validate.ts	/^function _custom_validate_set_number<A extends AtomName>($/;"	f
_custom_validate_set_string	atm/validate.ts	/^function _custom_validate_set_string<A extends AtomName>($/;"	f
_custom_validate_string	atm/validate.ts	/^function _custom_validate_string<A extends AtomName>($/;"	f
_custom_validate_time	atm/validate.ts	/^function _custom_validate_time<A extends AtomName>($/;"	f
_dal	acl/acl.ts	/^	protected _dal:urn_dal.DAL<A>;$/;"	m
_delete_cascade	rel/mongo/models.ts	/^async function _delete_cascade($/;"	f
_encrypt_changed_properties	dal/encrypt.ts	/^	protected async _encrypt_changed_properties(id:string, atom:Atom<A> | Partial<AtomShape<A>>)$/;"	m
_encrypt_changed_properties	dal/encrypt.ts	/^	protected async _encrypt_changed_properties(id:string, atom:Atom<A>)$/;"	m
_encrypt_changed_properties	dal/encrypt.ts	/^	protected async _encrypt_changed_properties(id:string, atom:Partial<AtomShape<A>>)$/;"	m
_find_unsets	rel/mongo/relation.ts	/^function _find_unsets<A extends AtomName>(atom_name:A, partial_atom:Partial<AtomShape<A>>){$/;"	f
_fix_atom_on_validation_error	dal/selfish.ts	/^	private async _fix_atom_on_validation_error(atom:Atom<A>)$/;"	m
_fix_molecule_on_validation_error	dal/selfish.ts	/^	private async _fix_molecule_on_validation_error<D extends Depth>(molecule:Molecule<A,D>, depth?:D)$/;"	m
_generate_date_schema_options	rel/mongo/schema.ts	/^function _generate_date_schema_options($/;"	f
_generate_enum_schema_options	rel/mongo/schema.ts	/^function _generate_enum_schema_options($/;"	f
_generate_mongoose_schema_type_options	rel/mongo/schema.ts	/^function _generate_mongoose_schema_type_options(atom_name: AtomName, prop_def:Book.Definition.Property, prop_key:string)$/;"	f
_generate_number_schema_options	rel/mongo/schema.ts	/^function _generate_number_schema_options($/;"	f
_generate_passport	bll/authenticate.ts	/^	private _generate_passport(auth_atom:AuthAtom<A>)$/;"	m
_generate_populate_obj	rel/mongo/relation.ts	/^function _generate_populate_obj<A extends AtomName>(atom_name:A, depth?:number, depth_query?:Query<A>)$/;"	f
_generate_string_schema_options	rel/mongo/schema.ts	/^function _generate_string_schema_options($/;"	f
_generate_subatomkey_populate_obj	rel/mongo/relation.ts	/^function _generate_subatomkey_populate_obj<A extends AtomName>($/;"	f
_generate_token	bll/authenticate.ts	/^	private _generate_token(auth_atom:AuthAtom<A>)$/;"	m
_get_conn_name	rel/mongo/log.ts	/^	protected _get_conn_name():ConnectionName{$/;"	m
_get_conn_name	rel/mongo/relation.ts	/^	protected _get_conn_name():ConnectionName{$/;"	m
_get_conn_name	rel/mongo/trash.ts	/^	protected _get_conn_name():ConnectionName{$/;"	m
_has_all_properties	atm/validate.ts	/^function _has_all_properties<A extends AtomName>(atom_name:A, atom_shape:AtomShape<A>)$/;"	f
_has_no_other_properties	atm/validate.ts	/^function _has_no_other_properties<A extends AtomName>(atom_name:A, partial_atom:Partial<AtomShape<A>>)$/;"	f
_hide_hidden_properties_single_molecule	atm/util.ts	/^function _hide_hidden_properties_single_molecule<A extends AtomName, D extends Depth>(atom_name:A, molecule:Molecule<A,D>)$/;"	f
_is_base_query_type	val/query.ts	/^function _is_base_query_type(val:any)$/;"	f
_is_empty_id	dal/validate.ts	/^function _is_empty_id(id:string){$/;"	f
_is_valid_id	rel/mongo/relation.ts	/^function _is_valid_id(id:string)$/;"	f
_on_close	rel/mongo/connection.ts	/^	private _on_close()$/;"	m
_on_connected	rel/mongo/connection.ts	/^	private _on_connected()$/;"	m
_on_connecting	rel/mongo/connection.ts	/^	private _on_connecting()$/;"	m
_on_disconnected	rel/mongo/connection.ts	/^	private _on_disconnected()$/;"	m
_on_disconnecting	rel/mongo/connection.ts	/^	private _on_disconnecting()$/;"	m
_on_error	rel/mongo/connection.ts	/^	private _on_error(e:Error)$/;"	m
_on_reconnect_failed	rel/mongo/connection.ts	/^	private _on_reconnect_failed()$/;"	m
_on_reconnect_tries	rel/mongo/connection.ts	/^	private _on_reconnect_tries()$/;"	m
_on_reconnected	rel/mongo/connection.ts	/^	private _on_reconnected()$/;"	m
_raw	rel/mongo/relation.ts	/^	protected _raw:mongoose.Model<mongoose.Document>;$/;"	m
_read	acl/acl.ts	/^	protected _read?:RealType<BookPropertyType.ID>;$/;"	m
_read_query	acl/acl.ts	/^	protected _read_query:Query<A>;$/;"	m
_replace_atom_on_error	dal/selfish.ts	/^	protected async _replace_atom_on_error(id:string, atom:Atom<A>)$/;"	m
_replace_molecule_on_error	dal/selfish.ts	/^	protected async _replace_molecule_on_error<D extends Depth>(id:string, molecule:Molecule<A,D>, depth?:D)$/;"	m
_return_acl	bll/security.ts	/^function _return_acl<A extends AtomName>(atom_name:A, passport?:Passport) {$/;"	f
_security_type	acl/acl.ts	/^	protected _security_type:BookSecurityType;$/;"	m
_trash_dal	dal/recycle.ts	/^	private _trash_dal?:BasicDAL<A>;$/;"	m
_validate_bond_type	atm/validate.ts	/^function _validate_bond_type<A extends AtomName>($/;"	f
_validate_custom_bond_type	atm/validate.ts	/^function _validate_custom_bond_type<A extends AtomName>($/;"	f
_validate_custom_type	atm/validate.ts	/^function _validate_custom_type<A extends AtomName>($/;"	f
_validate_expression	val/query.ts	/^function _validate_expression<A extends AtomName>(field:Query.Expression<A>, atom_name:A)$/;"	f
_validate_hard_properties	atm/validate.ts	/^function _validate_hard_properties<A extends AtomName>(atom:Atom<A>)$/;"	f
_validate_id	dal/validate.ts	/^function _validate_id($/;"	f
_validate_molecule_bond_properties	atm/validate.ts	/^function _validate_molecule_bond_properties<A extends AtomName, D extends Depth>($/;"	f
_validate_partial_atom_bond_properties	atm/validate.ts	/^function _validate_partial_atom_bond_properties<A extends AtomName>($/;"	f
_validate_primitive_properties	atm/validate.ts	/^function _validate_primitive_properties<A extends AtomName>($/;"	f
_validate_primitive_type	atm/validate.ts	/^function _validate_primitive_type<A extends AtomName>($/;"	f
_write	acl/acl.ts	/^	protected _write?:RealType<BookPropertyType.ID>;$/;"	m
abstract_passport	stc/static.ts	/^export const abstract_passport = {$/;"	v
alter_by_id	acl/acl.ts	/^	public async alter_by_id(id:string, partial_atom:Partial<AtomShape<A>>)$/;"	m
alter_by_id	dal/basic.ts	/^	public async alter_by_id(id:string, partial_atom:Partial<AtomShape<A>>)$/;"	m
alter_by_id	dal/encrypt.ts	/^	public async alter_by_id(id:string, partial_atom:Partial<AtomShape<A>>)$/;"	m
alter_by_id	dal/validate.ts	/^	public async alter_by_id(id:string, partial_atom:Partial<AtomShape<A>>)$/;"	m
alter_by_id	rel/mongo/relation.ts	/^	public async alter_by_id(id:string, partial_atom:Partial<AtomShape<A>>)$/;"	m
any	atm/validate.ts	/^export function any<A extends AtomName, D extends Depth>($/;"	f
any	atm/validate.ts	/^export function any<A extends AtomName>($/;"	f
atom	atm/validate.ts	/^export function atom<A extends AtomName>(atom_name:A, atom:Atom<A>)$/;"	f
atom	books.ts	/^export const atom = {$/;"	v
atom_common_properties	stc/static.ts	/^export const atom_common_properties = {$/;"	v
atom_hard_properties	stc/static.ts	/^export const atom_hard_properties = {$/;"	v
atom_partial	atm/validate.ts	/^export function atom_partial<A extends AtomName>(atom_name:A, partial_atom:Partial<AtomShape<A>>)$/;"	f
atom_partial	atm/validate.ts	/^export function atom_partial<A extends AtomName>(atom_name:A, partial_atom:Partial<AtomShape<A>>):true;$/;"	f
atom_partial	atm/validate.ts	/^export function atom_partial<A extends AuthName>(atom_name:A, partial_atom:Partial<AtomShape<A>>):true;$/;"	f
atom_shape	atm/validate.ts	/^export function atom_shape<A extends AtomName>(atom_name:A, atom_shape:AtomShape<A>)$/;"	f
authenticate	bll/authenticate.ts	/^	public async authenticate(email: string, password: string)$/;"	m
bcrypt	atm/encrypt.ts	/^import bcrypt from 'bcryptjs';$/;"	I
bcrypt	bll/authenticate.ts	/^import bcrypt from 'bcryptjs';$/;"	I
bll	books.ts	/^export const bll = {$/;"	v
client	run.ts	/^import client from '.\/client';$/;"	I
close	rel/mongo/connection.ts	/^	public async close()$/;"	m
connect	cnn/cnn.ts	/^export function connect()$/;"	f
core_config	cnf/defaults.ts	/^export const core_config:FullConfiguration = {$/;"	v
count	acl/acl.ts	/^	public async count(query:Query<A>)$/;"	m
count	bll/basic.ts	/^	public async count(query:Query<A>)$/;"	m
count	dal/basic.ts	/^	public async count(query:Query<A>)$/;"	m
count	rel/mongo/relation.ts	/^	public async count(query:Query<A>)$/;"	m
create	acl/acl.ts	/^export function create<A extends AtomName>(atom_name:A, user_groups:RealType<BookPropertyType.ID>[])$/;"	f
create	bll/authenticate.ts	/^export function create<A extends AuthName>(atom_name:A)$/;"	f
create	bll/basic.ts	/^export function create<A extends AtomName>(atom_name:A)$/;"	f
create	bll/create.ts	/^export function create<A extends AtomName>(atom_name:A, passport?:Passport)$/;"	f
create	bll/log.ts	/^export function create<A extends LogName>(log_name:A)$/;"	f
create	dal/dal.ts	/^export function create<A extends AtomName>(atom_name:A)$/;"	f
create	rel/mongo/connection.ts	/^export function create(con_name:ConnectionName, mongo_connection:string, db_name:string)$/;"	f
create	rel/mongo/relation.ts	/^export function create<A extends AtomName>(atom_name: A)$/;"	f
create_all_connection	rel/mongo/models.ts	/^export function create_all_connection():void{$/;"	f
create_basic	dal/basic.ts	/^export function create_basic<A extends AtomName>(atom_name:A, db_relation:urn_rel.Relation<A>)$/;"	f
create_encrypt	dal/encrypt.ts	/^export function create_encrypt<A extends AtomName>(atom_name:A)$/;"	f
create_log	dal/log.ts	/^export function create_log<A extends LogName>(log_name:A)$/;"	f
create_main	dal/rel.ts	/^export function create_main<A extends AtomName>(atom_name:A)$/;"	f
create_model	rel/mongo/connection.ts	/^	public create_model<A extends AtomName>(relation_name:A, schema:mongoose.Schema)$/;"	m
create_recycle	dal/recycle.ts	/^export function create_recycle<A extends AtomName>(atom_name:A)$/;"	f
create_security	bll/security.ts	/^export function create_security<A extends AtomName>(atom_name:A, passport?:Passport)$/;"	f
create_selfish	dal/selfish.ts	/^export function create_selfish<A extends AtomName>(atom_name:A)$/;"	f
create_validate	dal/validate.ts	/^export function create_validate<A extends AtomName>(atom_name:A)$/;"	f
delete_by_id	acl/acl.ts	/^	public async delete_by_id(id:string)$/;"	m
delete_by_id	dal/basic.ts	/^	public async delete_by_id(id:string)$/;"	m
delete_by_id	dal/recycle.ts	/^	public async delete_by_id(id:string)$/;"	m
delete_by_id	dal/validate.ts	/^	public async delete_by_id(id:string)$/;"	m
delete_by_id	rel/mongo/relation.ts	/^	public async delete_by_id(id:string)$/;"	m
delete_undefined_optional	atm/util.ts	/^export function delete_undefined_optional<A extends AtomName>($/;"	f
disconnect	cnn/cnn.ts	/^export async function disconnect(connection_name?:ConnectionName)$/;"	f
dock	books.ts	/^export const dock = {$/;"	v
encrypt_property	atm/validate.ts	/^export function encrypt_property<A extends AtomName>($/;"	f
enum	typ/book_srv.ts	/^export const enum BookPermissionType {$/;"	v
enum	typ/book_srv.ts	/^export const enum BookSecurityType {$/;"	v
enum	typ/common.ts	/^export const enum BookPropertyType {$/;"	v
filter_uniform_bond_properties	acl/acl.ts	/^	public filter_uniform_bond_properties<D extends Depth>(molecule:Molecule<A,D>, depth = 0)$/;"	m
find	bll/basic.ts	/^	public async find<D extends Depth>(query:Query<A>, options?:Query.Options<A,D>)$/;"	m
find_by_id	bll/basic.ts	/^	public async find_by_id<D extends Depth>(id:string, options?:Query.Options<A,D>)$/;"	m
find_one	bll/basic.ts	/^	public async find_one<D extends Depth>(query:Query<A>, options?:Query.Options<A,D>)$/;"	m
fix	atm/index.ts	/^export const fix = {$/;"	v
generate_mongo_schema_def	rel/mongo/schema.ts	/^export function generate_mongo_schema_def<A extends AtomName>(atom_name:A)$/;"	f
get_all_property_definitions	book/atom/common.ts	/^export function get_all_property_definitions<A extends AtomName>(atom_name:A)$/;"	f
get_all_property_definitions	book/atom/server.ts	/^export function get_all_property_definitions<A extends AtomName>(atom_name:A)$/;"	f
get_bll_group	nst/index.ts	/^export function get_bll_group():bll.BLL<'group'>{$/;"	f
get_bond	atm/keys.ts	/^export function get_bond<A extends AtomName>(atom_name:A)$/;"	f
get_bond_array	atm/keys.ts	/^export function get_bond_array<A extends AtomName>(atom_name:A)$/;"	f
get_bond_non_array	atm/keys.ts	/^export function get_bond_non_array<A extends AtomName>(atom_name:A)$/;"	f
get_custom_property_definitions	book/atom/common.ts	/^export function get_custom_property_definitions<A extends AtomName>(atom_name:A)$/;"	f
get_custom_property_definitions	book/atom/server.ts	/^export function get_custom_property_definitions<A extends AtomName>(atom_name:A)$/;"	f
get_definition	book/atom/common.ts	/^export function get_definition<A extends AtomName>(atom_name:A)$/;"	f
get_definition	book/atom/server.ts	/^export function get_definition<A extends AtomName>(atom_name:A)$/;"	f
get_definition	book/bll/server.ts	/^export function get_definition<A extends AtomName>(atom_name:A)$/;"	f
get_encrypted	atm/keys.ts	/^export function get_encrypted<A extends AtomName>(atom_name:A)$/;"	f
get_hidden	atm/keys.ts	/^export function get_hidden<A extends AtomName>(atom_name:A)$/;"	f
get_model	rel/mongo/models.ts	/^function get_model(conn_name:ConnectionName, atom_name:AtomName)$/;"	f
get_names	book/atom/client.ts	/^export function get_names():AtomName[]{$/;"	f
get_names	book/atom/server.ts	/^export function get_names():AtomName[]{$/;"	f
get_optional	atm/keys.ts	/^export function get_optional<A extends AtomName>(atom_name:A)$/;"	f
get_property_definition	book/atom/common.ts	/^export function get_property_definition<A extends AtomName>(atom_name:A, property_name:keyof Book.Definition.Properties)$/;"	f
get_property_definition	book/atom/server.ts	/^export function get_property_definition<A extends AtomName>(atom_name:A, property_name:keyof Book.Definition.Properties)$/;"	f
get_subatom_name	atm/util.ts	/^export function get_subatom_name<A extends AtomName>(atom_name:A ,atom_key:string)$/;"	f
get_unique	atm/keys.ts	/^export function get_unique<A extends AtomName>(atom_name:A)$/;"	f
has_property	atm/util.ts	/^export function has_property<A extends AtomName>(atom_name:A, key:keyof Atom<A>):boolean;$/;"	f
has_property	atm/util.ts	/^export function has_property<A extends AtomName>(atom_name:A, key:keyof Atom<A>|string)$/;"	f
has_property	atm/util.ts	/^export function has_property<A extends AtomName>(atom_name:A, key:string):boolean;$/;"	f
has_property	book/atom/common.ts	/^export function has_property<A extends AtomName>(atom_name:A, key:string)$/;"	f
has_property	book/atom/server.ts	/^export function has_property<A extends AtomName>(atom_name:A, key:string)$/;"	f
hide_hidden_properties	atm/util.ts	/^export function hide_hidden_properties<A extends AtomName, D extends Depth>(atom_name:A, molecules:Molecule<A,D>):Molecule<A,D>;$/;"	f
hide_hidden_properties	atm/util.ts	/^export function hide_hidden_properties<A extends AtomName, D extends Depth>(atom_name:A, molecules:Molecule<A,D>[]):Molecule<A,D>[];$/;"	f
hide_hidden_properties	atm/util.ts	/^export function hide_hidden_properties<A extends AtomName, D extends Depth>(atom_name:A, molecules:Molecule<A,D>|Molecule<A,D>[])$/;"	f
init	srv/main.ts	/^export function init(config:types.Configuration)$/;"	f
insert_new	bll/auth.ts	/^	public async insert_new(atom_shape:AtomShape<A>)$/;"	m
insert_new	bll/basic.ts	/^	public async insert_new(atom_shape:AtomShape<A>)$/;"	m
insert_one	acl/acl.ts	/^	public async insert_one(atom_shape:AtomShape<A>)$/;"	m
insert_one	dal/basic.ts	/^	public async insert_one(atom_shape:AtomShape<A>)$/;"	m
insert_one	dal/encrypt.ts	/^	public async insert_one(atom_shape:AtomShape<A>)$/;"	m
insert_one	dal/validate.ts	/^	public async insert_one(atom_shape:AtomShape<A>)$/;"	m
insert_one	rel/mongo/relation.ts	/^	public async insert_one(atom_shape:AtomShape<A>)$/;"	m
is_atom	atm/util.ts	/^export function is_atom<A extends AtomName>(atom_name:A, atom:Atom<A>)$/;"	f
is_auth_atom	atm/util.ts	/^export function is_auth_atom<A extends AuthName>(atom:unknown)$/;"	f
is_auth_atom_name	atm/util.ts	/^export function is_auth_atom_name<A extends AtomName>(atom_name:A)$/;"	f
is_molecule	atm/util.ts	/^export function is_molecule<A extends AtomName, D extends Depth>(atom_name:A, molecule:Molecule<A,D>)$/;"	f
is_optional_property	atm/util.ts	/^export function is_optional_property<A extends AtomName>(atom_name:A, key:keyof Atom<A>)$/;"	f
is_public_request	bll/authenticate.ts	/^export function is_public_request<A extends AtomName>(atom_name:A, action: AuthAction)$/;"	f
is_superuser	bll/authenticate.ts	/^export function is_superuser(passport?:Passport)$/;"	f
is_valid_id	rel/mongo/relation.ts	/^	public is_valid_id(id:string)$/;"	m
is_valid_passport	bll/authenticate.ts	/^export function is_valid_passport(passport:Passport)$/;"	f
jwt	bll/authenticate.ts	/^import jwt from 'jsonwebtoken';$/;"	I
keys	atm/index.ts	/^export const keys = {$/;"	v
log_create	rel/mongo/log.ts	/^export function log_create<A extends AtomName>(atom_name: A)$/;"	f
molecule	atm/validate.ts	/^export function molecule<A extends AtomName, D extends Depth>($/;"	f
molecule_primitive_properties	atm/validate.ts	/^export function molecule_primitive_properties<A extends AtomName, D extends Depth>($/;"	f
molecule_to_atom	atm/util.ts	/^export function molecule_to_atom<A extends AtomName, D extends Depth>($/;"	f
mongo_app	rel/mongo/models.ts	/^export const mongo_app:MongoApp = {};$/;"	v
mongoose	rel/mongo/connection.ts	/^import mongoose from 'mongoose';$/;"	I
mongoose	rel/mongo/models.ts	/^import mongoose from 'mongoose';$/;"	I
mongoose	rel/mongo/relation.ts	/^import mongoose from 'mongoose';$/;"	I
mongoose	rel/mongo/schema.ts	/^import mongoose from 'mongoose';$/;"	I
mongoose	rel/mongo/types.ts	/^import mongoose from 'mongoose';$/;"	I
name	rel/mongo/connection.ts	/^	public name:ConnectionName;$/;"	m
passport_has_all_keys	bll/authenticate.ts	/^function passport_has_all_keys(passport:Passport)$/;"	f
passport_has_correct_type_values	bll/authenticate.ts	/^function passport_has_correct_type_values(passport:Passport)$/;"	f
passport_has_no_other_keys	bll/authenticate.ts	/^function passport_has_no_other_keys(passport:Passport)$/;"	f
properties	atm/encrypt.ts	/^export async function properties<A extends AtomName>(atom_name:A, atom:AtomShape<A>):Promise<AtomShape<A>>$/;"	f
properties	atm/encrypt.ts	/^export async function properties<A extends AtomName>(atom_name:A, atom:Partial<AtomShape<A>>)$/;"	f
property	atm/encrypt.ts	/^export async function property<A extends AtomName>$/;"	f
property	atm/fix.ts	/^export function property<A extends AtomName, D extends Depth>($/;"	f
property	atm/fix.ts	/^export function property<A extends AtomName>($/;"	f
property	atm/validate.ts	/^export function property<A extends AtomName>($/;"	f
readyState	rel/mongo/connection.ts	/^	public readyState:number;$/;"	m
remove_by_id	bll/basic.ts	/^	public async remove_by_id(id:string)$/;"	m
remove_one	bll/basic.ts	/^	public async remove_one<D extends Depth>(molecule:Molecule<A,D>)$/;"	m
replace_by_id	rel/mongo/relation.ts	/^	public async replace_by_id(id:string, atom:AtomShape<A>)$/;"	m
select	acl/acl.ts	/^	public async select<D extends Depth>(query:Query<A>, options?:Query.Options<A,D>)$/;"	m
select	dal/basic.ts	/^	public async select<D extends Depth = 0>(query:Query<A>, options?:Query.Options<A,D>)$/;"	m
select	dal/validate.ts	/^	public async select<D extends Depth = 0>(query:Query<A>, options?:Query.Options<A, D>)$/;"	m
select	rel/mongo/relation.ts	/^	public async select<D extends Depth>(query:Query<A>, options?:Query.Options<A,D>)$/;"	m
select_by_id	acl/acl.ts	/^	public async select_by_id<D extends Depth>(id:string, options?:Query.Options<A,D>)$/;"	m
select_by_id	dal/basic.ts	/^	public async select_by_id<D extends Depth = 0>(id:string, options?:Query.Options<A,D>)$/;"	m
select_by_id	dal/validate.ts	/^	public async select_by_id<D extends Depth = 0>(id:string, options?:Query.Options<A,D>)$/;"	m
select_by_id	rel/mongo/relation.ts	/^	public async select_by_id<D extends Depth>(id:string, options?:Query.Options<A,D>)$/;"	m
select_one	acl/acl.ts	/^	public async select_one<D extends Depth>(query:Query<A>, options?:Query.Options<A,D>)$/;"	m
select_one	dal/basic.ts	/^	public async select_one<D extends Depth = 0>(query:Query<A>, options?:Query.Options<A,D>)$/;"	m
select_one	dal/validate.ts	/^	public async select_one<D extends Depth = 0>(query:Query<A>, options?:Query.Options<A,D>)$/;"	m
select_one	rel/mongo/relation.ts	/^	public async select_one<D extends Depth>(query:Query<A>, options?:Query.Options<A,D>)$/;"	m
trash_create	rel/mongo/trash.ts	/^export function trash_create<A extends AtomName>(atom_name: A)$/;"	f
trash_dal	dal/recycle.ts	/^	public get trash_dal():BasicDAL<A>{$/;"	m
update_by_id	bll/basic.ts	/^	public async update_by_id(id:string, partial_atom:Partial<AtomShape<A>>)$/;"	m
update_one	bll/basic.ts	/^	public async update_one(atom:Atom<A>)$/;"	m
uranio	books.ts	/^import uranio from 'uranio';$/;"	I
uri	rel/mongo/connection.ts	/^	public uri:string;$/;"	m
urn_core	run.ts	/^import urn_core from '.\/index';$/;"	I
util	atm/index.ts	/^export const util = {$/;"	v
validate	atm/index.ts	/^export const validate = {$/;"	v
validate	dal/selfish.ts	/^	protected async validate(molecule:Atom<A>):Promise<Atom<A>>;$/;"	m
validate	dal/selfish.ts	/^	protected async validate(molecule:Atom<A>, depth?:0):Promise<Atom<A>>;$/;"	m
validate	dal/selfish.ts	/^	protected async validate<D extends Depth>(molecule:Molecule<A,D> | Atom<A>, depth?:D)$/;"	m
validate	dal/selfish.ts	/^	protected async validate<D extends Depth>(molecule:Molecule<A,D>, depth?:D):Promise<Molecule<A,D>>;$/;"	m
validate	dal/validate.ts	/^	protected async validate(molecule:Atom<A>):Promise<Atom<A>>;$/;"	m
validate	dal/validate.ts	/^	protected async validate(molecule:Atom<A>, depth?:0):Promise<Atom<A>>;$/;"	m
validate	dal/validate.ts	/^	protected async validate<D extends Depth>(molecule:Molecule<A,D> | Atom<A>, depth?:D)$/;"	m
validate	dal/validate.ts	/^	protected async validate<D extends Depth>(molecule:Molecule<A,D>, depth?:D):Promise<Molecule<A,D>>$/;"	m
validate_filter	val/query.ts	/^function validate_filter<A extends AtomName>(query:Query<A>, atom_name:A)$/;"	f
validate_filter_options_params	val/query.ts	/^export function validate_filter_options_params<A extends AtomName, D extends Depth>$/;"	f
validate_name	book/atom/common.ts	/^export function validate_name(atom_name:string):boolean{$/;"	f
validate_name	book/atom/server.ts	/^export function validate_name(atom_name:string):boolean{$/;"	f
validate_options	val/query.ts	/^function validate_options<A extends AtomName, D extends Depth>(options:Query.Options<A,D>, atom_name:A)$/;"	f
